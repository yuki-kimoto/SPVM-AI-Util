package MyMatrix {
  use SPVM::AI::Util;
  
  sub add_float_matrix : void () {
    # 1 3 5
    # 2 4 6
    my $mat1 = SPVM::AI::Util->mat_newf([1f, 2f, 3f, 4f, 5f, 6f], 2, 3);
    
    # 2 4 6
    # 3 5 7
    my $mat2 = SPVM::AI::Util->mat_newf([2f, 3f, 4f, 5f, 6f, 7f], 2, 3);
    
    my $mat3 = SPVM::AI::Util->mat_addf($mat1, $mat2);
    
    print SPVM::AI::Util->mat_strf($mat3) . "\n";
  }

  sub sub_float_matrix : void () {
    # 1 3 5
    # 2 4 6
    my $mat1 = SPVM::AI::Util->mat_newf([1f, 2f, 3f, 4f, 5f, 6f], 2, 3);
    
    # 2 4 6
    # 3 5 7
    my $mat2 = SPVM::AI::Util->mat_newf([2f, 3f, 4f, 5f, 6f, 7f], 2, 3);
    
    my $mat3 = SPVM::AI::Util->mat_subf($mat1, $mat2);
    
    print SPVM::AI::Util->mat_strf($mat3) . "\n";
  }

  sub scamul_float_matrix : void () {
    # 1 3 5
    # 2 4 6
    my $mat1 = SPVM::AI::Util->mat_newf([1f, 2f, 3f, 4f, 5f, 6f], 2, 3);
    
    my $mat3 = SPVM::AI::Util->mat_scamulf(3f, $mat1);
    
    print SPVM::AI::Util->mat_strf($mat3) . "\n";
  }

  sub mul_float_matrix : void () {
    # 1 3 5
    # 2 4 6
    my $mat1 = SPVM::AI::Util->mat_newf([1f, 2f, 3f, 4f, 5f, 6f], 2, 3);
    
    # 2 5
    # 3 6
    # 4 7
    my $mat2 = SPVM::AI::Util->mat_newf([2f, 3f, 4f, 5f, 6f, 7f], 3, 2);
    
    my $mat3 = SPVM::AI::Util->mat_mulf($mat1, $mat2);
    
    print SPVM::AI::Util->mat_strf($mat3) . "\n";
  }
}
